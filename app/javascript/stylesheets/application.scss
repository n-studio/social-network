@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

@import "devise";
@import "actiontext";

a:hover {
  @apply underline;
}

.no-underlined-links {
  a:hover {
    @apply no-underline;
  }
}

.profiler-results .profiler-button, .profiler-results .profiler-controls {
  background-color: #ffffffaa;
}

trix-toolbar {
  .trix-button--icon-bullet-list, .trix-button--icon-number-list {
    @apply block sm:hidden xl:block;
  }

  .trix-button--icon-decrease-nesting-level, .trix-button--icon-increase-nesting-level {
    @apply hidden xl:block;
  }

  .trix-button--icon-code {
    @apply block md:hidden lg:block;
  }

  .trix-button-group.trix-button-group--history-tools {
    @apply flex sm:hidden lg:flex;
  }
}

// https://css-tricks.com/the-cleanest-trick-for-autogrowing-textareas/
.grow-wrap {
  /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
  display: grid;

  &::after {
    /* Note the weird space! Needed to preventy jumpy behavior */
    content: attr(data-replicated-value) " ";

    /* This is how textarea text behaves */
    white-space: pre-wrap;

    /* Hidden from view, clicks, and screen readers */
    visibility: hidden;
  }

  & > textarea {
    /* You could leave this, but after a user resizes, then it ruins the auto sizing */
    resize: none;

    /* Firefox shows scrollbar on growth, you can hide like this. */
    overflow: hidden;
  }

  & > textarea, &::after {
    /* Identical styling required!! */
    padding: 0.5rem;
    font: inherit;

    /* Place on top of each other */
    grid-area: 1 / 1 / 2 / 2;
  }
}
